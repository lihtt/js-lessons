/* Задачи:

1) Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба (тоже базовая математика, иногда используется в создании анимаций). Эта функция принимает в себя целое число со значением длины ребра куба. Ответ выведите в формате строки, который изображен в примерах.

Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и тесты будут ломаться. Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.

Примеры:

calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'

calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'

calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'

calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'

calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'
 */

// Место для первой задачи
function calculateVolumeAndArea(side) {
    if (typeof(side) !== 'number' || side <= 0) {
        return "При вычислении произошла ошибка";
    } 
    
    let volume = 0,
        area = 0;

    volume = side ** 3;
    area = 6 * side ** 2;

    return `'Объем куба: ${volume}, площадь всей поверхности: ${area}`;

};

console.log(calculateVolumeAndArea(5));

/* 2) Постепенно переходим к более реалистичным задачам :) Вы обнаружите, что там используется все тоже самое.

Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:



Функция принимает только целое число от 1 до 36.

Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:

"Ошибка. Проверьте правильность введенного номера места"

Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

Пример:

getCoupeNumber(33)  => 9

getCoupeNumber(7)  => 2

getCoupeNumber(300)  => "Таких мест в вагоне не существует"

getCoupeNumber(0)  => "Таких мест в вагоне не существует"

getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"

getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"

getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"

Такая функция вполне реальна и может использоваться для формирования билетов, в том числе и визуально на сайтах. Конечно, там будет куда больше условий, но смысл остается таким же. */


// Место для второй задачи
function getCoupeNumber(seat) {
    if (typeof(seat) !== 'number' || seat < 0 || !Number.isInteger(seat)) {
        return "Ошибка. Проверьте правильность введенного номера места";
    }
    if (seat == 0 || seat > 36) {
        return "Таких мест в вагоне не существует";
    }
    if (seat % 4 == 0){
        return Math.floor(seat / 4)
    } else {
        return Math.floor(seat / 4) + 1
    }
}

console.log(getCoupeNumber(0));
console.log(getCoupeNumber(1));
console.log(getCoupeNumber(2));
console.log(getCoupeNumber(3));
console.log(getCoupeNumber(4));
console.log(getCoupeNumber(5));
console.log(getCoupeNumber(31));
console.log(getCoupeNumber(32));
console.log(getCoupeNumber(33));
console.log(getCoupeNumber(34));
console.log(getCoupeNumber(35));
console.log(getCoupeNumber(38));




